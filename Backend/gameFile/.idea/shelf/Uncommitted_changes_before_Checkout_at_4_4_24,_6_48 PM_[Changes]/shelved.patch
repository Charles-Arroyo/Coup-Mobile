Index: src/main/java/database/Lobby/LobbySocket.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package database.Lobby;\n\nimport java.io.IOException;\nimport java.util.*;\n\nimport com.fasterxml.jackson.databind.util.JSONPObject;\nimport database.Chat.MessageRepository;\nimport database.Game.Game;\nimport database.Game.Player;\nimport database.Users.User;\nimport database.Users.UserRepository;\nimport database.Websocketconfig.WebsocketConfig;\nimport jakarta.persistence.Lob;\nimport jakarta.transaction.Transactional;\nimport jakarta.websocket.*;\nimport jakarta.websocket.server.PathParam;\nimport jakarta.websocket.server.ServerEndpoint;\nimport com.fasterxml.jackson.databind.ObjectMapper;\n\nimport org.slf4j.Logger;\nimport org.slf4j.LoggerFactory;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.stereotype.Component;\nimport org.springframework.stereotype.Controller;\nimport jakarta.websocket.OnOpen;\nimport jakarta.websocket.server.ServerEndpoint;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.stereotype.Controller;\nimport org.json.JSONObject;\n\n\n@Controller      // this is needed for this to be an endpoint to springboot\n@ServerEndpoint(value = \"/lobby/{lobbyId}/{username}\")  // this is WebSocket URL\npublic class LobbySocket {\n\n    private static LobbyRepository lobbyRepository; //Lobby Repo\n\n\n    private static UserRepository userRepository; // User Repo\n\n    private static Game game;\n\n    @Autowired\n    public void setUserRepository(UserRepository repo) {\n        userRepository = repo;  // we are setting the static variable\n\n    }\n    @Autowired\n    public void setLobbyRepository(LobbyRepository repo) {\n        lobbyRepository = repo;  // we are setting the static variable\n    }\n    private final Logger logger = LoggerFactory.getLogger(LobbySocket.class);\n\n    private static Map<Session, Lobby> sessionLobbyMap = new Hashtable<>(); // Associate a Sessions with Lobbys to find lobbies and to terminate lobbies\n    private static Map<Session,User> sessionUserMap = new HashMap<>(); // Associate a Session with Users to find users to remove and add them\n\n\n    @OnOpen\n    public void onOpen(Session session, @PathParam(\"lobbyId\") int lobbyId, @PathParam(\"username\") String username) throws IOException {\n        User user = userRepository.findByUserEmail(username); // find user\n        sessionUserMap.put(session, user);\n        if(lobbyId == 0){ //USER WANTS TO CREATE LOBBY\n            Lobby newLobby = new Lobby(); // Create new Lobby\n            newLobby.addUser(user); // add user\n            sessionLobbyMap.put(session,newLobby); // Save Session with lobby\n            lobbyRepository.save(newLobby); // Save lobby for admin use\n            broadcastToSpecificLobby(newLobby.getId(), \"The ID is: \" + newLobby.getId());\n            broadcastToSpecificLobby(newLobby.getId(),user.getUserEmail() + \" Joined the lobby\");\n            broadcastToSpecificUser(user.getUserEmail(),\"Users: \" + newLobby.getUsers());\n        }else{ //USER WANTS TO JOIN LOBBY\n            Lobby existingLobby = lobbyRepository.findById(lobbyId); // Find Lobby By ID\n            if(!existingLobby.isFull()) {\n                existingLobby.addUser(user); // Add User to this Lobby\n                lobbyRepository.save(existingLobby); // Save Lobby\n                broadcastToSpecificLobby(existingLobby.getId(),user.getUserEmail() + \" Joined the lobby\");\n                sessionLobbyMap.put(session, existingLobby);\n                broadcastToSpecificUser(user.getUserEmail(),existingLobby.getUsers());\n                if(existingLobby.isFull()){ //START GAME\n                    /**\n                     * INIT GAME\n                     */\n                    broadcastToSpecificLobby(existingLobby.getId(),\"lobby is full\");\n\n                    List<Player> players = new ArrayList<>(4); // Create an Array list of Players\n\n                    game = new Game(players); //Pass in Deck and Array List\n                    game.initGame(existingLobby.getUserArraylist().get(0).getUserEmail(),\n                            existingLobby.getUserArraylist().get(1).getUserEmail(),\n                            existingLobby.getUserArraylist().get(2).getUserEmail(),\n                            existingLobby.getUserArraylist().get(3).getUserEmail()); // Sends four players, see init game method\n\n\n                    //For loop for normal String\n//                    for(User printGameState : existingLobby.getUserArraylist()) {\n//                        Player player = game.getPlayer(printGameState.getUserEmail());\n//                        broadcastToSpecificUser(printGameState.getUserEmail(), game.getPlayerStats(player));\n//                    }\n\n//                    for(User printGameState : existingLobby.getUserArraylist()) { //Itterate through Lobby\n//                        Player player = game.getPlayer(printGameState.getUserEmail()); // Find Player\n//                        if (player != null) {\n//                            broadcastToSpecificUserJSON(printGameState.getUserEmail(), player); //broadcast to User the Their Player JSON Object\n//                        }\n//                    }\n\n\n                    /**\n                     * INIT GAME\n                     */\n                }\n\n            }else{\n                broadcastToSpecificLobby(existingLobby.getId(),\"lobby is full\");\n            }\n\n        }\n    }\n    @OnMessage\n    public void onMessage(Session session, String message) throws IOException {\n        //Todo Make onMessage\n        JSONObject jsonpObject = new JSONObject(message); // Create JSON object\n        String email = jsonpObject.getString(\"playerEmail\"); // Assign first part of JSON\n        String valueOfJson = jsonpObject.getString(\"readyToListen\"); // Assign last part of JSON\n\n        Player p = game.getPlayer(email); //Find player by their email\n\n        if(valueOfJson.equals(\"ready\")){  //If the player message says ready, start their game.\n            broadcastToSpecificUserJSON(p.getUserEmail(),p);\n        }\n\n\n\n\n    }\n\n    @OnClose\n    public void onClose(Session session, @PathParam(\"lobbyId\") int lobbyId, @PathParam(\"username\")String username) {\n        /**\n         * ToDo: Make it so it closes the correct lobby, right now it is passing 0 for the user who created it.\n         */\n\n        Lobby lobby = lobbyRepository.findById(userRepository.findByUserEmail(username).getLobby().getId()); //Find Lobby here it shows 0\n        User user = userRepository.findByUserEmail(username); //Find UserName\n        lobby.removeUser(user); // Remove user from lobby\n        lobbyRepository.save(lobby); // Save Lobby\n        sessionUserMap.remove(session); // Remove Users Session\n        broadcastToSpecificLobby(lobbyId,\"THIS USER HAS LEFT:\" + user.getUserEmail());\n        for(User user1 : lobby.getUserArraylist()) {\n            broadcastToSpecificLobby(lobby.getId(),user1.getUserEmail());\n        }\n\n        ////NEW CODE NEW CODE\n        if(lobby.isEmpty()){\n            sessionLobbyMap.remove(session);\n            lobbyRepository.delete(lobby);\n        }\n        ////NEW CODE NEW CODE\n    }\n\n\n\n\n    private void broadcastToAllUsers(String message) { // This method broadcasts to all user\n        sessionUserMap.forEach((session, user) -> {\n            try {\n                session.getBasicRemote().sendText(message);\n            }\n            catch (IOException e) {\n                logger.info(\"Exception: \" + e.getMessage().toString());\n                e.printStackTrace();\n            }\n        });\n    }\n\n    private void broadcastToSpecificLobby(int lobbyId, String message) {\n        // Iterate over the sessionLobbyMap to find sessions associated with the specific lobbyId\n        sessionLobbyMap.forEach((session, lobby) -> {\n            // Check if the lobby matches the lobbyId we want to broadcast to\n            if (lobby.getId() == lobbyId) {\n                try {\n                    // Use the session to send the message\n                    session.getBasicRemote().sendText(message);\n                } catch (IOException e) {\n                    logger.error(\"Error broadcasting to specific lobby: \" + e.getMessage(), e);\n                }\n            }\n        });\n    }\n\n\n//    private void broadcastToSpecificUserJSON(String userEmail, Object data) {\n//        ObjectMapper mapper = new ObjectMapper();\n//\n//        try {\n//            String message = mapper.writeValueAsString(data);\n//            Session userSession = getSessionByEmail(userEmail);\n//            if (userSession != null) {\n//                userSession.getBasicRemote().sendText(message);\n//            }\n//        } catch (IOException e) {\n//            logger.error(\"Error broadcasting to specific user: \" + e.getMessage(), e);\n//        }\n//    }\n\n\n    private void broadcastToSpecificUserJSON(String userEmail, Player data) {\n        ObjectMapper mapper = new ObjectMapper();\n        Map<String, Object> wrapper = new HashMap<>();\n        wrapper.put(\"player\", data);\n\n        try {\n            String message = mapper.writeValueAsString(wrapper);\n            Session userSession = getSessionByEmail(userEmail);\n            if (userSession != null) {\n                userSession.getBasicRemote().sendText(message);\n            }\n        } catch (IOException e) {\n            logger.error(\"Error broadcasting to specific user: \" + e.getMessage(), e);\n        }\n    }\n    private Session getSessionByEmail(String userEmail) {\n        for (Map.Entry<Session, User> entry : sessionUserMap.entrySet()) { //Looks through userSessionMap\n            if (entry.getValue().getUserEmail().equals(userEmail)) { //Finds Match with userEmail\n                return entry.getKey(); //Returns Session\n            }\n        }\n        return null;\n    }\n\n\n\n    private void broadcastToSpecificUser(String userEmail, String message) {\n        // Iterate over the sessionUserMap to find the session associated with the userEmail\n        sessionUserMap.forEach((session, user) -> {\n            // Check if the user matches the userEmail we want to send a message to\n            if (user.getUserEmail().equals(userEmail)) {\n                try {\n                    // Use the session to send the message\n                    session.getBasicRemote().sendText(message);\n                } catch (IOException e) {\n                    logger.error(\"Error broadcasting to specific user: \" + e.getMessage(), e);\n                }\n            }\n        });\n    }\n\n\n\n\n\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/database/Lobby/LobbySocket.java b/src/main/java/database/Lobby/LobbySocket.java
--- a/src/main/java/database/Lobby/LobbySocket.java	(revision 13ab4d7e7e8230045e54e113f5b9f82a077e1042)
+++ b/src/main/java/database/Lobby/LobbySocket.java	(date 1712274478239)
@@ -129,8 +129,6 @@
         }
 
 
-
-
     }
 
     @OnClose
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"AutoImportSettings\">\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\n  </component>\n  <component name=\"ChangeListManager\">\n    <list default=\"true\" id=\"1936ec40-f159-4a30-bcb2-3a9a25e2f79a\" name=\"Changes\" comment=\"\">\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/database/Game/Game.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/database/Game/Game.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/database/Lobby/LobbySocket.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/database/Lobby/LobbySocket.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/target/classes/database/Game/Game.class\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/target/classes/database/Game/Game.class\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/target/classes/database/Lobby/LobbySocket.class\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/target/classes/database/Lobby/LobbySocket.class\" afterDir=\"false\" />\n    </list>\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\n  </component>\n  <component name=\"FileTemplateManagerImpl\">\n    <option name=\"RECENT_TEMPLATES\">\n      <list>\n        <option value=\"Interface\" />\n        <option value=\"Class\" />\n      </list>\n    </option>\n  </component>\n  <component name=\"Git.Settings\">\n    <option name=\"RECENT_BRANCH_BY_REPOSITORY\">\n      <map>\n        <entry key=\"$PROJECT_DIR$/../..\" value=\"gameTesting\" />\n      </map>\n    </option>\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$/../..\" />\n  </component>\n  <component name=\"HighlightingSettingsPerFile\">\n    <setting file=\"file://$PROJECT_DIR$/src/main/java/database/Game/GameSocket.java\" root0=\"SKIP_INSPECTION\" />\n    <setting file=\"file://$PROJECT_DIR$/src/main/java/database/Main.java\" root0=\"FORCE_HIGHLIGHTING\" />\n  </component>\n  <component name=\"MarkdownSettingsMigration\">\n    <option name=\"stateVersion\" value=\"1\" />\n  </component>\n  <component name=\"ProjectColorInfo\">{\n        &quot;associatedIndex&quot;: 1\n        }</component>\n  <component name=\"ProjectId\" id=\"2cv012loMQsaPWYAjlYLAiinBLy\" />\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\">\n    <ConfirmationsSetting value=\"1\" id=\"Add\" />\n  </component>\n  <component name=\"ProjectViewState\">\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\n    <option name=\"showLibraryContents\" value=\"true\" />\n  </component>\n  <component name=\"PropertiesComponent\"><![CDATA[{\n  \"keyToString\": {\n    \"JAR Application.onetoone-1.0.0.jar.executor\": \"Run\",\n    \"Maven.onetoone [clean].executor\": \"Run\",\n    \"Maven.onetoone [compile].executor\": \"Run\",\n    \"Maven.onetoone [install].executor\": \"Run\",\n    \"Maven.onetoone [package].executor\": \"Run\",\n    \"Maven.onetoone [test].executor\": \"Run\",\n    \"Maven.onetoone [validate].executor\": \"Run\",\n    \"RequestMappingsPanelOrder0\": \"0\",\n    \"RequestMappingsPanelOrder1\": \"1\",\n    \"RequestMappingsPanelWidth0\": \"75\",\n    \"RequestMappingsPanelWidth1\": \"75\",\n    \"RunOnceActivity.OpenProjectViewOnStart\": \"true\",\n    \"RunOnceActivity.ShowReadmeOnStart\": \"true\",\n    \"SHARE_PROJECT_CONFIGURATION_FILES\": \"true\",\n    \"Spring Boot.Main.executor\": \"Debug\",\n    \"git-widget-placeholder\": \"main\",\n    \"ignore.virus.scanning.warn.message\": \"true\",\n    \"kotlin-language-version-configured\": \"true\",\n    \"last_opened_file_path\": \"/Users/CharlesDylan/Desktop/309/mk1_8/Backend/gameFile/src/test/java\",\n    \"node.js.detected.package.eslint\": \"true\",\n    \"node.js.detected.package.tslint\": \"true\",\n    \"node.js.selected.package.eslint\": \"(autodetect)\",\n    \"node.js.selected.package.tslint\": \"(autodetect)\",\n    \"nodejs_package_manager_path\": \"npm\",\n    \"project.structure.last.edited\": \"Modules\",\n    \"project.structure.proportion\": \"0.15\",\n    \"project.structure.side.proportion\": \"0.2\",\n    \"settings.editor.selected.configurable\": \"project.propVCSSupport.Mappings\",\n    \"vue.rearranger.settings.migration\": \"true\"\n  }\n}]]></component>\n  <component name=\"RecentsManager\">\n    <key name=\"CopyFile.RECENT_KEYS\">\n      <recent name=\"$PROJECT_DIR$/src/test/java\" />\n      <recent name=\"$PROJECT_DIR$/src/main/java/database\" />\n      <recent name=\"$PROJECT_DIR$/src/main/java/database/Websocket\" />\n    </key>\n    <key name=\"MoveFile.RECENT_KEYS\">\n      <recent name=\"$PROJECT_DIR$/src/main/java/database/Laptops\" />\n    </key>\n  </component>\n  <component name=\"RunManager\" selected=\"Spring Boot.Main\">\n    <configuration name=\"onetoone-1.0.0.jar\" type=\"JarApplication\" temporary=\"true\">\n      <option name=\"JAR_PATH\" value=\"$PROJECT_DIR$/target/onetoone-1.0.0.jar\" />\n      <method v=\"2\" />\n    </configuration>\n    <configuration name=\"Main\" type=\"SpringBootApplicationConfigurationType\" factoryName=\"Spring Boot\" nameIsGenerated=\"true\">\n      <module name=\"onetoone\" />\n      <option name=\"SPRING_BOOT_MAIN_CLASS\" value=\"database.Main\" />\n      <method v=\"2\">\n        <option name=\"Make\" enabled=\"true\" />\n      </method>\n    </configuration>\n    <list>\n      <item itemvalue=\"JAR Application.onetoone-1.0.0.jar\" />\n      <item itemvalue=\"Spring Boot.Main\" />\n    </list>\n    <recent_temporary>\n      <list>\n        <item itemvalue=\"JAR Application.onetoone-1.0.0.jar\" />\n        <item itemvalue=\"JAR Application.onetoone-1.0.0.jar\" />\n        <item itemvalue=\"JAR Application.onetoone-1.0.0.jar\" />\n        <item itemvalue=\"JAR Application.onetoone-1.0.0.jar\" />\n      </list>\n    </recent_temporary>\n  </component>\n  <component name=\"SharedIndexes\">\n    <attachedChunks>\n      <set>\n        <option value=\"jdk-21.0.2-openjdk-21.0.2-4caba194b151-322ed176\" />\n      </set>\n    </attachedChunks>\n  </component>\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\n  <component name=\"TaskManager\">\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\n      <changelist id=\"1936ec40-f159-4a30-bcb2-3a9a25e2f79a\" name=\"Changes\" comment=\"\" />\n      <created>1708976526529</created>\n      <option name=\"number\" value=\"Default\" />\n      <option name=\"presentableId\" value=\"Default\" />\n      <updated>1708976526529</updated>\n      <workItem from=\"1708976528020\" duration=\"143000\" />\n      <workItem from=\"1708976674069\" duration=\"350000\" />\n      <workItem from=\"1708977029899\" duration=\"1542000\" />\n      <workItem from=\"1708979062954\" duration=\"177000\" />\n      <workItem from=\"1708979244589\" duration=\"3556000\" />\n      <workItem from=\"1708987387770\" duration=\"3530000\" />\n      <workItem from=\"1708996363878\" duration=\"10942000\" />\n      <workItem from=\"1709055352867\" duration=\"2466000\" />\n      <workItem from=\"1709153734816\" duration=\"1413000\" />\n      <workItem from=\"1709155294658\" duration=\"2144000\" />\n      <workItem from=\"1709161596558\" duration=\"4956000\" />\n      <workItem from=\"1709166854309\" duration=\"8387000\" />\n      <workItem from=\"1709277358508\" duration=\"33000\" />\n      <workItem from=\"1709277536403\" duration=\"740000\" />\n      <workItem from=\"1709278283874\" duration=\"13282000\" />\n      <workItem from=\"1709350218099\" duration=\"1543000\" />\n      <workItem from=\"1709351769839\" duration=\"8410000\" />\n      <workItem from=\"1709412882699\" duration=\"808000\" />\n      <workItem from=\"1709413879245\" duration=\"3403000\" />\n      <workItem from=\"1709436552211\" duration=\"12203000\" />\n      <workItem from=\"1709505585344\" duration=\"4659000\" />\n      <workItem from=\"1709510702080\" duration=\"1622000\" />\n      <workItem from=\"1709512332350\" duration=\"9467000\" />\n      <workItem from=\"1709521834560\" duration=\"19310000\" />\n      <workItem from=\"1709551134341\" duration=\"51000\" />\n      <workItem from=\"1709551200526\" duration=\"52000\" />\n      <workItem from=\"1709551508385\" duration=\"3565000\" />\n      <workItem from=\"1709555086298\" duration=\"3738000\" />\n      <workItem from=\"1709688948096\" duration=\"1796000\" />\n      <workItem from=\"1710794014578\" duration=\"60000\" />\n      <workItem from=\"1710806308259\" duration=\"590000\" />\n      <workItem from=\"1710809232526\" duration=\"54000\" />\n      <workItem from=\"1710809503371\" duration=\"5714000\" />\n      <workItem from=\"1710816190618\" duration=\"383000\" />\n      <workItem from=\"1710888431259\" duration=\"3090000\" />\n      <workItem from=\"1710891543082\" duration=\"15000\" />\n      <workItem from=\"1710893974888\" duration=\"735000\" />\n      <workItem from=\"1710894768531\" duration=\"1560000\" />\n      <workItem from=\"1710897035927\" duration=\"287000\" />\n      <workItem from=\"1710897332445\" duration=\"1137000\" />\n      <workItem from=\"1710977633372\" duration=\"634000\" />\n      <workItem from=\"1710980838265\" duration=\"551000\" />\n      <workItem from=\"1710983010996\" duration=\"855000\" />\n      <workItem from=\"1711133906007\" duration=\"130000\" />\n      <workItem from=\"1711149032055\" duration=\"1083000\" />\n      <workItem from=\"1711150122507\" duration=\"17711000\" />\n      <workItem from=\"1711229350963\" duration=\"508000\" />\n      <workItem from=\"1711230008848\" duration=\"980000\" />\n      <workItem from=\"1711327397948\" duration=\"313000\" />\n      <workItem from=\"1711430285981\" duration=\"349000\" />\n      <workItem from=\"1711430706344\" duration=\"2963000\" />\n      <workItem from=\"1711459880255\" duration=\"151000\" />\n      <workItem from=\"1711577516489\" duration=\"169000\" />\n      <workItem from=\"1711577696393\" duration=\"67000\" />\n      <workItem from=\"1711578010148\" duration=\"7766000\" />\n      <workItem from=\"1711693408979\" duration=\"7639000\" />\n      <workItem from=\"1711739315316\" duration=\"9122000\" />\n      <workItem from=\"1711774442287\" duration=\"14971000\" />\n      <workItem from=\"1711865990434\" duration=\"3000\" />\n      <workItem from=\"1711866000794\" duration=\"545000\" />\n      <workItem from=\"1711866792359\" duration=\"4486000\" />\n      <workItem from=\"1711915937203\" duration=\"6431000\" />\n    </task>\n    <servers />\n  </component>\n  <component name=\"TypeScriptGeneratedFilesManager\">\n    <option name=\"version\" value=\"3\" />\n  </component>\n  <component name=\"Vcs.Log.Tabs.Properties\">\n    <option name=\"TAB_STATES\">\n      <map>\n        <entry key=\"MAIN\">\n          <value>\n            <State />\n          </value>\n        </entry>\n      </map>\n    </option>\n  </component>\n  <component name=\"VcsManagerConfiguration\">\n    <ignored-roots>\n      <path value=\"$USER_HOME$\" />\n    </ignored-roots>\n  </component>\n  <component name=\"XDebuggerManager\">\n    <breakpoint-manager>\n      <breakpoints>\n        <breakpoint enabled=\"true\" type=\"java-exception\">\n          <properties class=\"java.lang.IllegalStateException\" package=\"java.lang\" />\n          <option name=\"timeStamp\" value=\"1\" />\n        </breakpoint>\n        <line-breakpoint enabled=\"true\" type=\"java-line\">\n          <url>file://$PROJECT_DIR$/src/main/java/database/test/LobbyRepositoryTest.java</url>\n          <line>17</line>\n          <option name=\"timeStamp\" value=\"2\" />\n        </line-breakpoint>\n        <line-breakpoint enabled=\"true\" type=\"java-line\">\n          <url>file://$PROJECT_DIR$/src/main/java/database/Lobby/LobbySocket.java</url>\n          <line>81</line>\n          <option name=\"timeStamp\" value=\"36\" />\n        </line-breakpoint>\n        <line-breakpoint enabled=\"true\" type=\"java-line\">\n          <url>file://$PROJECT_DIR$/src/main/java/database/Lobby/LobbySocket.java</url>\n          <line>120</line>\n          <option name=\"timeStamp\" value=\"37\" />\n        </line-breakpoint>\n      </breakpoints>\n    </breakpoint-manager>\n    <pin-to-top-manager>\n      <pinned-members>\n        <PinnedItemInfo parentTag=\"database.Lobby.LobbySocket\" memberName=\"game\" />\n      </pinned-members>\n    </pin-to-top-manager>\n    <watches-manager>\n      <configuration name=\"SpringBootApplicationConfigurationType\">\n        <watch expression=\"this.friends\" language=\"JAVA\" />\n      </configuration>\n    </watches-manager>\n  </component>\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 13ab4d7e7e8230045e54e113f5b9f82a077e1042)
+++ b/.idea/workspace.xml	(date 1712274410375)
@@ -6,10 +6,7 @@
   <component name="ChangeListManager">
     <list default="true" id="1936ec40-f159-4a30-bcb2-3a9a25e2f79a" name="Changes" comment="">
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/database/Game/Game.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/database/Game/Game.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/main/java/database/Lobby/LobbySocket.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/database/Lobby/LobbySocket.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/target/classes/database/Game/Game.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/database/Game/Game.class" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/target/classes/database/Lobby/LobbySocket.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/database/Lobby/LobbySocket.class" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -66,7 +63,7 @@
     "RunOnceActivity.OpenProjectViewOnStart": "true",
     "RunOnceActivity.ShowReadmeOnStart": "true",
     "SHARE_PROJECT_CONFIGURATION_FILES": "true",
-    "Spring Boot.Main.executor": "Debug",
+    "Spring Boot.Main.executor": "Run",
     "git-widget-placeholder": "main",
     "ignore.virus.scanning.warn.message": "true",
     "kotlin-language-version-configured": "true",
@@ -233,11 +230,6 @@
           <url>file://$PROJECT_DIR$/src/main/java/database/Lobby/LobbySocket.java</url>
           <line>81</line>
           <option name="timeStamp" value="36" />
-        </line-breakpoint>
-        <line-breakpoint enabled="true" type="java-line">
-          <url>file://$PROJECT_DIR$/src/main/java/database/Lobby/LobbySocket.java</url>
-          <line>120</line>
-          <option name="timeStamp" value="37" />
         </line-breakpoint>
       </breakpoints>
     </breakpoint-manager>
