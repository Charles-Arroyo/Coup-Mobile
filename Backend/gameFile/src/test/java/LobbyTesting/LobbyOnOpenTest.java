//package LobbyTesting;
//import database.Lobby.Lobby;
//import database.Lobby.LobbyRepository;
//import database.Lobby.LobbySocket;
//import database.Spectator.SpectatorRepository;
//import database.Users.User;
//import database.Users.UserRepository;
//import org.junit.jupiter.api.BeforeEach;
//import org.junit.jupiter.api.Test;
//import org.mockito.Mock;
//import org.mockito.MockitoAnnotations;
//import static org.mockito.Mockito.*;
//
//import jakarta.websocket.Session;
//import jakarta.websocket.RemoteEndpoint.Basic;
//import java.io.IOException;
//
//private LobbySocket lobbySocket;
//
//@Mock
//private LobbyRepository lobbyRepository;
//@Mock
//private UserRepository userRepository;
//@Mock
//private SpectatorRepository spectatorRepository;
//@Mock
//private Session session;
//@Mock
//private Basic basicRemote;
//
//public class LobbyOnOpenTest {
//
//    @BeforeEach
//    void setUp() {
//        MockitoAnnotations.openMocks(this);
//        lobbySocket = new LobbySocket();
//        lobbySocket.setLobbyRepository(lobbyRepository);
//        lobbySocket.setUserRepository(userRepository);
//        lobbySocket.setSpectatorRepository(spectatorRepository);
//
//        when(session.getBasicRemote()).thenReturn(basicRemote);
//    }
//
//    @Test
//    void testOnOpenCreatesLobby() throws IOException {
//        // Arrange
//        int lobbyId = 0;
//        String username = "pizza";
//        User user = userRepository.findByUserEmail(username); // find user by their email
//
//        when(userRepository.findByUserEmail(username)).thenReturn(user);
//        when(lobbyRepository.save(any(Lobby.class))).thenAnswer(invocation -> invocation.getArgument(0));
//
//        // Act
//        lobbySocket.onOpen(session, lobbyId, username);
//
//        // Assert
//        verify(lobbyRepository, times(1)).save(any(Lobby.class));
//        verify(basicRemote, times(1)).sendText(contains("The ID is:"));
//    }
//
//}
